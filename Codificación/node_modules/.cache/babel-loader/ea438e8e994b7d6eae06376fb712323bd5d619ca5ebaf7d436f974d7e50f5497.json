{"ast":null,"code":"const fs = require('fs');\nconst path = require('path');\nconst XLSX = require('xlsx');\nclass SAL {\n  static almacenarPaginas(paginas) {\n    const filePath = path.join(__dirname, 'Excel', 'paginas_filas_programa_dcsha.xlsx');\n    let workbook;\n    let worksheet;\n    if (fs.existsSync(filePath)) {\n      workbook = XLSX.readFile(filePath);\n      worksheet = workbook.Sheets[workbook.SheetNames[0]];\n    } else {\n      workbook = XLSX.utils.book_new();\n      worksheet = XLSX.utils.aoa_to_sheet([['Página', 'Tipo', 'Tiempo de inicio', 'Duración', 'Tiempo ejecutado']]);\n      XLSX.utils.book_append_sheet(workbook, worksheet, 'Páginas');\n    }\n\n    // Agregar las páginas al archivo Excel\n    const startRow = XLSX.utils.decode_range(worksheet['!ref']).e.r + 2;\n    paginas.forEach((pagina, index) => {\n      const row = startRow + index;\n      worksheet[`A${row}`] = {\n        v: pagina.pagina\n      };\n      worksheet[`B${row}`] = {\n        v: pagina.tipo\n      };\n      worksheet[`C${row}`] = {\n        v: pagina.tiempoInicio\n      };\n      worksheet[`D${row}`] = {\n        v: pagina.duracion\n      };\n      worksheet[`E${row}`] = {\n        v: pagina.tiempoEjecutado\n      };\n    });\n    XLSX.writeFile(workbook, filePath);\n  }\n  static obtenerPaginas() {\n    const filePath = path.join(__dirname, 'Excel', 'paginas_filas_programa_dcsha.xlsx');\n    if (fs.existsSync(filePath)) {\n      const workbook = XLSX.readFile(filePath);\n      const worksheet = workbook.Sheets[workbook.SheetNames[0]];\n      const range = XLSX.utils.decode_range(worksheet['!ref']);\n      const paginas = [];\n      for (let row = 2; row <= range.e.r; row++) {\n        const pagina = {\n          pagina: worksheet[`A${row}`] ? worksheet[`A${row}`].v : '',\n          tipo: worksheet[`B${row}`] ? worksheet[`B${row}`].v : '',\n          tiempoInicio: worksheet[`C${row}`] ? worksheet[`C${row}`].v : '',\n          duracion: worksheet[`D${row}`] ? worksheet[`D${row}`].v : '',\n          tiempoEjecutado: worksheet[`E${row}`] ? worksheet[`E${row}`].v : ''\n        };\n        paginas.push(pagina);\n      }\n      return paginas;\n    }\n    return [];\n  }\n}\nmodule.exports = SAL;","map":{"version":3,"names":["fs","require","path","XLSX","SAL","almacenarPaginas","paginas","filePath","join","__dirname","workbook","worksheet","existsSync","readFile","Sheets","SheetNames","utils","book_new","aoa_to_sheet","book_append_sheet","startRow","decode_range","e","r","forEach","pagina","index","row","v","tipo","tiempoInicio","duracion","tiempoEjecutado","writeFile","obtenerPaginas","range","push","module","exports"],"sources":["C:/xampp/htdocs/Aplicativo Escaleta-Teclado GC prototipo/Codificación/src/Persistencia/SistemaAlmacenamientoLocal/SAL.js"],"sourcesContent":["const fs = require('fs');\r\nconst path = require('path');\r\nconst XLSX = require('xlsx');\r\n\r\nclass SAL {\r\n  static almacenarPaginas(paginas) {\r\n    const filePath = path.join(__dirname, 'Excel', 'paginas_filas_programa_dcsha.xlsx');\r\n\r\n    let workbook;\r\n    let worksheet;\r\n\r\n    if (fs.existsSync(filePath)) {\r\n      workbook = XLSX.readFile(filePath);\r\n      worksheet = workbook.Sheets[workbook.SheetNames[0]];\r\n    } else {\r\n      workbook = XLSX.utils.book_new();\r\n      worksheet = XLSX.utils.aoa_to_sheet([['Página', 'Tipo', 'Tiempo de inicio', 'Duración', 'Tiempo ejecutado']]);\r\n      XLSX.utils.book_append_sheet(workbook, worksheet, 'Páginas');\r\n    }\r\n\r\n    // Agregar las páginas al archivo Excel\r\n    const startRow = XLSX.utils.decode_range(worksheet['!ref']).e.r + 2;\r\n    paginas.forEach((pagina, index) => {\r\n      const row = startRow + index;\r\n      worksheet[`A${row}`] = { v: pagina.pagina };\r\n      worksheet[`B${row}`] = { v: pagina.tipo };\r\n      worksheet[`C${row}`] = { v: pagina.tiempoInicio };\r\n      worksheet[`D${row}`] = { v: pagina.duracion };\r\n      worksheet[`E${row}`] = { v: pagina.tiempoEjecutado };\r\n    });\r\n\r\n    XLSX.writeFile(workbook, filePath);\r\n  }\r\n\r\n  static obtenerPaginas() {\r\n    const filePath = path.join(__dirname, 'Excel', 'paginas_filas_programa_dcsha.xlsx');\r\n\r\n    if (fs.existsSync(filePath)) {\r\n      const workbook = XLSX.readFile(filePath);\r\n      const worksheet = workbook.Sheets[workbook.SheetNames[0]];\r\n      const range = XLSX.utils.decode_range(worksheet['!ref']);\r\n      const paginas = [];\r\n\r\n      for (let row = 2; row <= range.e.r; row++) {\r\n        const pagina = {\r\n          pagina: worksheet[`A${row}`] ? worksheet[`A${row}`].v : '',\r\n          tipo: worksheet[`B${row}`] ? worksheet[`B${row}`].v : '',\r\n          tiempoInicio: worksheet[`C${row}`] ? worksheet[`C${row}`].v : '',\r\n          duracion: worksheet[`D${row}`] ? worksheet[`D${row}`].v : '',\r\n          tiempoEjecutado: worksheet[`E${row}`] ? worksheet[`E${row}`].v : '',\r\n        };\r\n        paginas.push(pagina);\r\n      }\r\n\r\n      return paginas;\r\n    }\r\n\r\n    return [];\r\n  }\r\n}\r\n\r\nmodule.exports = SAL;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}