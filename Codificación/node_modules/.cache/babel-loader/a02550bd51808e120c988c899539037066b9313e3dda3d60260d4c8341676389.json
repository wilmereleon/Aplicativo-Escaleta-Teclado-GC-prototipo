{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\Aplicativo Escaleta-Teclado GC prototipo\\\\Codificaci\\xF3n\\\\src\\\\Presentaci\\xF3n\\\\InterfazUsuario\\\\VistaZocaloTitulo.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VistaZocaloTitulo = ({\n  onClose,\n  datos\n}) => {\n  _s();\n  const [solapa, setSolapa] = useState(datos.solapa || '');\n  const [titulo, setTitulo] = useState(datos.titulo || '');\n  const handleSave = () => {\n    // Enviar los datos al servidor para actualizar el Excel\n    fetch('http://localhost:3001/updateExcel', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        id: datos.id,\n        solapa,\n        titulo\n      })\n    }).then(response => {\n      if (!response.ok) {\n        throw new Error('Error al actualizar el archivo Excel');\n      }\n      return response.text();\n    }).then(() => {\n      console.log('Excel actualizado correctamente');\n      onClose();\n    }).catch(error => {\n      console.error('Error al actualizar el archivo Excel:', error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"vista-zocalo-titulo\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"solapa\",\n        children: \"Solapa:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"solapa\",\n        name: \"solapa\",\n        value: solapa,\n        onChange: e => setSolapa(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"titulo\",\n        children: \"T\\xEDtulo:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"titulo\",\n        name: \"titulo\",\n        value: titulo,\n        onChange: e => setTitulo(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSave,\n        children: \"Guardar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onClose,\n        children: \"Cerrar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(VistaZocaloTitulo, \"hK5OilXRfPmztNMXacRljwVKUHw=\");\n_c = VistaZocaloTitulo;\nexport default VistaZocaloTitulo;\nvar _c;\n$RefreshReg$(_c, \"VistaZocaloTitulo\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","VistaZocaloTitulo","onClose","datos","_s","solapa","setSolapa","titulo","setTitulo","handleSave","fetch","method","headers","body","JSON","stringify","id","then","response","ok","Error","text","console","log","catch","error","className","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","name","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/xampp/htdocs/Aplicativo Escaleta-Teclado GC prototipo/Codificación/src/Presentación/InterfazUsuario/VistaZocaloTitulo.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\n\r\nconst VistaZocaloTitulo = ({ onClose, datos }) => {\r\n  const [solapa, setSolapa] = useState(datos.solapa || '');\r\n  const [titulo, setTitulo] = useState(datos.titulo || '');\r\n\r\n  const handleSave = () => {\r\n    // Enviar los datos al servidor para actualizar el Excel\r\n    fetch('http://localhost:3001/updateExcel', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({ id: datos.id, solapa, titulo }),\r\n    })\r\n      .then(response => {\r\n        if (!response.ok) {\r\n          throw new Error('Error al actualizar el archivo Excel');\r\n        }\r\n        return response.text();\r\n      })\r\n      .then(() => {\r\n        console.log('Excel actualizado correctamente');\r\n        onClose();\r\n      })\r\n      .catch(error => {\r\n        console.error('Error al actualizar el archivo Excel:', error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"vista-zocalo-titulo\">\r\n      <div>\r\n        <label htmlFor=\"solapa\">Solapa:</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"solapa\"\r\n          name=\"solapa\"\r\n          value={solapa}\r\n          onChange={(e) => setSolapa(e.target.value)}\r\n        />\r\n        <label htmlFor=\"titulo\">Título:</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"titulo\"\r\n          name=\"titulo\"\r\n          value={titulo}\r\n          onChange={(e) => setTitulo(e.target.value)}\r\n        />\r\n        <button onClick={handleSave}>Guardar</button>\r\n        <button onClick={onClose}>Cerrar</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VistaZocaloTitulo;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}