{"ast":null,"code":"import FilaEntrada from '../../Dominio/ModelosDeDominio/FilaEntrada';\nimport FilaVTRNota from '../../Dominio/ModelosDeDominio/FilaVTRNota';\nimport FilaVTRFull from '../../Dominio/ModelosDeDominio/FilaVTRFull';\nimport FilaPlaca from '../../Dominio/ModelosDeDominio/FilaPlaca';\nclass AsistenteProduccion {\n  constructor() {\n    this.elements = [new FilaEntrada('ID1', 'Entrada', 'Nombre1', '00:00:00', '00:00:00', '00:00:00'), new FilaVTRNota('ID2', 'VTR Nota', 'Nombre2', '00:00:00', '00:00:00', '00:00:00'), new FilaVTRFull('ID3', 'VTR Full', 'Nombre3', '00:00:00', '00:00:00', '00:00:00'), new FilaPlaca('ID4', 'Placa', 'Nombre4', '00:00:00', '00:00:00', '00:00:00')];\n  }\n  crearCelda(id, type, name, startTime, duration, elapsedTime) {\n    let newElement;\n    switch (type) {\n      case 'Entrada':\n        newElement = new FilaEntrada(id, type, name, startTime, duration, elapsedTime);\n        break;\n      case 'VTR Nota':\n        newElement = new FilaVTRNota(id, type, name, startTime, duration, elapsedTime);\n        break;\n      case 'VTR Full':\n        newElement = new FilaVTRFull(id, type, name, startTime, duration, elapsedTime);\n        break;\n      case 'Placa':\n        newElement = new FilaPlaca(id, type, name, startTime, duration, elapsedTime);\n        break;\n      default:\n        newElement = new Fila(id, type, name, startTime, duration, elapsedTime);\n    }\n    this.elements.push(newElement);\n    return this.elements;\n  }\n  editarCelda(id, campo, valor) {\n    const element = this.elements.find(el => el.id === id);\n    if (element) {\n      element.editarCampo(campo, valor);\n    }\n    return this.elements;\n  }\n  eliminarCelda(id) {\n    this.elements = this.elements.filter(el => el.id !== id);\n    return this.elements;\n  }\n}\nexport default AsistenteProduccion;","map":{"version":3,"names":["FilaEntrada","FilaVTRNota","FilaVTRFull","FilaPlaca","AsistenteProduccion","constructor","elements","crearCelda","id","type","name","startTime","duration","elapsedTime","newElement","Fila","push","editarCelda","campo","valor","element","find","el","editarCampo","eliminarCelda","filter"],"sources":["C:/xampp/htdocs/Aplicativo Escaleta-Teclado GC prototipo/Codificación/src/Presentación/InterfazUsuario/AsistenteProduccion.js"],"sourcesContent":["import FilaEntrada from '../../Dominio/ModelosDeDominio/FilaEntrada';\r\nimport FilaVTRNota from '../../Dominio/ModelosDeDominio/FilaVTRNota';\r\nimport FilaVTRFull from '../../Dominio/ModelosDeDominio/FilaVTRFull';\r\nimport FilaPlaca from '../../Dominio/ModelosDeDominio/FilaPlaca';\r\n\r\nclass AsistenteProduccion {\r\n  constructor() {\r\n    this.elements = [\r\n      new FilaEntrada('ID1', 'Entrada', 'Nombre1', '00:00:00', '00:00:00', '00:00:00'),\r\n      new FilaVTRNota('ID2', 'VTR Nota', 'Nombre2', '00:00:00', '00:00:00', '00:00:00'),\r\n      new FilaVTRFull('ID3', 'VTR Full', 'Nombre3', '00:00:00', '00:00:00', '00:00:00'),\r\n      new FilaPlaca('ID4', 'Placa', 'Nombre4', '00:00:00', '00:00:00', '00:00:00')\r\n    ];\r\n  }\r\n\r\n  crearCelda(id, type, name, startTime, duration, elapsedTime) {\r\n    let newElement;\r\n    switch (type) {\r\n      case 'Entrada':\r\n        newElement = new FilaEntrada(id, type, name, startTime, duration, elapsedTime);\r\n        break;\r\n      case 'VTR Nota':\r\n        newElement = new FilaVTRNota(id, type, name, startTime, duration, elapsedTime);\r\n        break;\r\n      case 'VTR Full':\r\n        newElement = new FilaVTRFull(id, type, name, startTime, duration, elapsedTime);\r\n        break;\r\n      case 'Placa':\r\n        newElement = new FilaPlaca(id, type, name, startTime, duration, elapsedTime);\r\n        break;\r\n      default:\r\n        newElement = new Fila(id, type, name, startTime, duration, elapsedTime);\r\n    }\r\n    this.elements.push(newElement);\r\n    return this.elements;\r\n  }\r\n\r\n  editarCelda(id, campo, valor) {\r\n    const element = this.elements.find(el => el.id === id);\r\n    if (element) {\r\n      element.editarCampo(campo, valor);\r\n    }\r\n    return this.elements;\r\n  }\r\n\r\n  eliminarCelda(id) {\r\n    this.elements = this.elements.filter(el => el.id !== id);\r\n    return this.elements;\r\n  }\r\n}\r\n\r\nexport default AsistenteProduccion;"],"mappings":"AAAA,OAAOA,WAAW,MAAM,4CAA4C;AACpE,OAAOC,WAAW,MAAM,4CAA4C;AACpE,OAAOC,WAAW,MAAM,4CAA4C;AACpE,OAAOC,SAAS,MAAM,0CAA0C;AAEhE,MAAMC,mBAAmB,CAAC;EACxBC,WAAWA,CAAA,EAAG;IACZ,IAAI,CAACC,QAAQ,GAAG,CACd,IAAIN,WAAW,CAAC,KAAK,EAAE,SAAS,EAAE,SAAS,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,CAAC,EAChF,IAAIC,WAAW,CAAC,KAAK,EAAE,UAAU,EAAE,SAAS,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,CAAC,EACjF,IAAIC,WAAW,CAAC,KAAK,EAAE,UAAU,EAAE,SAAS,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,CAAC,EACjF,IAAIC,SAAS,CAAC,KAAK,EAAE,OAAO,EAAE,SAAS,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,CAAC,CAC7E;EACH;EAEAI,UAAUA,CAACC,EAAE,EAAEC,IAAI,EAAEC,IAAI,EAAEC,SAAS,EAAEC,QAAQ,EAAEC,WAAW,EAAE;IAC3D,IAAIC,UAAU;IACd,QAAQL,IAAI;MACV,KAAK,SAAS;QACZK,UAAU,GAAG,IAAId,WAAW,CAACQ,EAAE,EAAEC,IAAI,EAAEC,IAAI,EAAEC,SAAS,EAAEC,QAAQ,EAAEC,WAAW,CAAC;QAC9E;MACF,KAAK,UAAU;QACbC,UAAU,GAAG,IAAIb,WAAW,CAACO,EAAE,EAAEC,IAAI,EAAEC,IAAI,EAAEC,SAAS,EAAEC,QAAQ,EAAEC,WAAW,CAAC;QAC9E;MACF,KAAK,UAAU;QACbC,UAAU,GAAG,IAAIZ,WAAW,CAACM,EAAE,EAAEC,IAAI,EAAEC,IAAI,EAAEC,SAAS,EAAEC,QAAQ,EAAEC,WAAW,CAAC;QAC9E;MACF,KAAK,OAAO;QACVC,UAAU,GAAG,IAAIX,SAAS,CAACK,EAAE,EAAEC,IAAI,EAAEC,IAAI,EAAEC,SAAS,EAAEC,QAAQ,EAAEC,WAAW,CAAC;QAC5E;MACF;QACEC,UAAU,GAAG,IAAIC,IAAI,CAACP,EAAE,EAAEC,IAAI,EAAEC,IAAI,EAAEC,SAAS,EAAEC,QAAQ,EAAEC,WAAW,CAAC;IAC3E;IACA,IAAI,CAACP,QAAQ,CAACU,IAAI,CAACF,UAAU,CAAC;IAC9B,OAAO,IAAI,CAACR,QAAQ;EACtB;EAEAW,WAAWA,CAACT,EAAE,EAAEU,KAAK,EAAEC,KAAK,EAAE;IAC5B,MAAMC,OAAO,GAAG,IAAI,CAACd,QAAQ,CAACe,IAAI,CAACC,EAAE,IAAIA,EAAE,CAACd,EAAE,KAAKA,EAAE,CAAC;IACtD,IAAIY,OAAO,EAAE;MACXA,OAAO,CAACG,WAAW,CAACL,KAAK,EAAEC,KAAK,CAAC;IACnC;IACA,OAAO,IAAI,CAACb,QAAQ;EACtB;EAEAkB,aAAaA,CAAChB,EAAE,EAAE;IAChB,IAAI,CAACF,QAAQ,GAAG,IAAI,CAACA,QAAQ,CAACmB,MAAM,CAACH,EAAE,IAAIA,EAAE,CAACd,EAAE,KAAKA,EAAE,CAAC;IACxD,OAAO,IAAI,CAACF,QAAQ;EACtB;AACF;AAEA,eAAeF,mBAAmB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}