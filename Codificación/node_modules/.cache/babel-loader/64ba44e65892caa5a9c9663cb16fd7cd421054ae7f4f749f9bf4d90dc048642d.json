{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\Aplicativo Escaleta-Teclado GC prototipo\\\\Codificaci\\xF3n\\\\src\\\\Presentaci\\xF3n\\\\InterfazUsuario\\\\VistaPrevioVentana.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport './VistaPrevioVentana.css';\n\n/**\r\n * Componente VistaPrevioVentana\r\n * Este componente carga y muestra el contenido HTML de una vista previa de zócalo.\r\n * @param {string} tipo - Tipo de zócalo a mostrar.\r\n * @param {function} onClose - Función para cerrar el componente.\r\n * @param {object} datos - Datos iniciales del zócalo.\r\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VistaPrevioVentana = ({\n  tipo,\n  onClose,\n  datos\n}) => {\n  _s();\n  const [htmlContent, setHtmlContent] = useState('');\n\n  /**\r\n   * useEffect para cargar el contenido HTML basado en el tipo de zócalo\r\n   * Se ejecuta cuando el componente se monta y cuando el tipo de zócalo cambia.\r\n   */\n  useEffect(() => {\n    const loadHtmlContent = async () => {\n      let url = '';\n      switch (tipo) {\n        case 'TITULOS':\n          url = '/VistaZócaloTítulo.html';\n          break;\n        // Agregar más casos para otros tipos de zócalos\n        default:\n          console.error(`Tipo de zócalo no soportado: ${tipo}`);\n          return;\n      }\n      try {\n        const response = await fetch(url);\n        if (!response.ok) {\n          throw new Error('Error al cargar el contenido HTML');\n        }\n        const text = await response.text();\n        setHtmlContent(text);\n      } catch (error) {\n        console.error('Error al cargar el contenido HTML:', error);\n      }\n    };\n    loadHtmlContent();\n  }, [tipo]);\n\n  /**\r\n   * handleSave\r\n   * Función para manejar el evento de guardar los datos del zócalo.\r\n   * @param {object} event - Evento de mensaje que contiene los datos del zócalo.\r\n   */\n  const handleSave = event => {\n    const {\n      solapa,\n      titulo\n    } = event.data;\n    // Enviar los datos al servidor para actualizar el Excel DE_CICLISMO_2023.xlsx\n    fetch('http://localhost:3001/updateExcel', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        id: datos.id,\n        solapa,\n        titulo,\n        fileName: 'DE_CICLISMO_2023.xlsx'\n      })\n    }).then(response => {\n      if (!response.ok) {\n        throw new Error('Error al actualizar el archivo Excel DE_CICLISMO_2023.xlsx');\n      }\n      return response.text();\n    }).then(() => {\n      console.log('Excel DE_CICLISMO_2023.xlsx actualizado correctamente');\n      onClose();\n    }).catch(error => {\n      console.error('Error al actualizar el archivo Excel DE_CICLISMO_2023.xlsx:', error);\n    });\n  };\n\n  /**\r\n   * useEffect para agregar y remover el event listener para el evento de mensaje\r\n   * Se ejecuta cuando el componente se monta y se desmonta.\r\n   */\n  useEffect(() => {\n    window.addEventListener('message', handleSave);\n    return () => {\n      window.removeEventListener('message', handleSave);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"vista-previo-ventana\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ventana-contenido\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        dangerouslySetInnerHTML: {\n          __html: htmlContent\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onClose,\n        children: \"Cerrar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n};\n_s(VistaPrevioVentana, \"xBpu7c+cAjzRHYOyFJyRkaG6TgU=\");\n_c = VistaPrevioVentana;\nexport default VistaPrevioVentana;\nvar _c;\n$RefreshReg$(_c, \"VistaPrevioVentana\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","VistaPrevioVentana","tipo","onClose","datos","_s","htmlContent","setHtmlContent","loadHtmlContent","url","console","error","response","fetch","ok","Error","text","handleSave","event","solapa","titulo","data","method","headers","body","JSON","stringify","id","fileName","then","log","catch","window","addEventListener","removeEventListener","className","children","dangerouslySetInnerHTML","__html","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/xampp/htdocs/Aplicativo Escaleta-Teclado GC prototipo/Codificación/src/Presentación/InterfazUsuario/VistaPrevioVentana.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport './VistaPrevioVentana.css';\r\n\r\n/**\r\n * Componente VistaPrevioVentana\r\n * Este componente carga y muestra el contenido HTML de una vista previa de zócalo.\r\n * @param {string} tipo - Tipo de zócalo a mostrar.\r\n * @param {function} onClose - Función para cerrar el componente.\r\n * @param {object} datos - Datos iniciales del zócalo.\r\n */\r\nconst VistaPrevioVentana = ({ tipo, onClose, datos }) => {\r\n  const [htmlContent, setHtmlContent] = useState('');\r\n\r\n  /**\r\n   * useEffect para cargar el contenido HTML basado en el tipo de zócalo\r\n   * Se ejecuta cuando el componente se monta y cuando el tipo de zócalo cambia.\r\n   */\r\n  useEffect(() => {\r\n    const loadHtmlContent = async () => {\r\n      let url = '';\r\n      switch (tipo) {\r\n        case 'TITULOS':\r\n          url = '/VistaZócaloTítulo.html';\r\n          break;\r\n        // Agregar más casos para otros tipos de zócalos\r\n        default:\r\n          console.error(`Tipo de zócalo no soportado: ${tipo}`);\r\n          return;\r\n      }\r\n\r\n      try {\r\n        const response = await fetch(url);\r\n        if (!response.ok) {\r\n          throw new Error('Error al cargar el contenido HTML');\r\n        }\r\n        const text = await response.text();\r\n        setHtmlContent(text);\r\n      } catch (error) {\r\n        console.error('Error al cargar el contenido HTML:', error);\r\n      }\r\n    };\r\n\r\n    loadHtmlContent();\r\n  }, [tipo]);\r\n\r\n  /**\r\n   * handleSave\r\n   * Función para manejar el evento de guardar los datos del zócalo.\r\n   * @param {object} event - Evento de mensaje que contiene los datos del zócalo.\r\n   */\r\n  const handleSave = (event) => {\r\n    const { solapa, titulo } = event.data;\r\n    // Enviar los datos al servidor para actualizar el Excel DE_CICLISMO_2023.xlsx\r\n    fetch('http://localhost:3001/updateExcel', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({ id: datos.id, solapa, titulo, fileName: 'DE_CICLISMO_2023.xlsx' }),\r\n    })\r\n      .then(response => {\r\n        if (!response.ok) {\r\n          throw new Error('Error al actualizar el archivo Excel DE_CICLISMO_2023.xlsx');\r\n        }\r\n        return response.text();\r\n      })\r\n      .then(() => {\r\n        console.log('Excel DE_CICLISMO_2023.xlsx actualizado correctamente');\r\n        onClose();\r\n      })\r\n      .catch(error => {\r\n        console.error('Error al actualizar el archivo Excel DE_CICLISMO_2023.xlsx:', error);\r\n      });\r\n  };\r\n\r\n  /**\r\n   * useEffect para agregar y remover el event listener para el evento de mensaje\r\n   * Se ejecuta cuando el componente se monta y se desmonta.\r\n   */\r\n  useEffect(() => {\r\n    window.addEventListener('message', handleSave);\r\n    return () => {\r\n      window.removeEventListener('message', handleSave);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"vista-previo-ventana\">\r\n      <div className=\"ventana-contenido\">\r\n        {/* Renderizar el contenido HTML cargado */}\r\n        <div dangerouslySetInnerHTML={{ __html: htmlContent }} />\r\n        <button onClick={onClose}>Cerrar</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VistaPrevioVentana;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}