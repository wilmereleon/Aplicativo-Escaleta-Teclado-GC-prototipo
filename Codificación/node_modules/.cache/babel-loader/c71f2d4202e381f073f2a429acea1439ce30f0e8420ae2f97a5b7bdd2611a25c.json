{"ast":null,"code":"class SAL {\n  static async almacenarPaginas(paginas) {\n    if (typeof window !== 'undefined' && window.localStorage) {\n      // Entorno del navegador\n      localStorage.setItem('paginas', JSON.stringify(paginas));\n    } else {\n      // Entorno del servidor\n      const {\n        default: fs\n      } = await import('fs');\n      const {\n        default: path\n      } = await import('path');\n      const XLSX = await import('xlsx');\n      const filePath = path.join(__dirname, 'Excel', 'paginas_filas_programa_dcsha.xlsx');\n      let workbook;\n      let worksheet;\n      if (fs.existsSync(filePath)) {\n        workbook = XLSX.readFile(filePath);\n        worksheet = workbook.Sheets[workbook.SheetNames[0]];\n      } else {\n        workbook = XLSX.utils.book_new();\n        worksheet = XLSX.utils.aoa_to_sheet([['Página', 'Tipo', 'Tiempo de inicio', 'Duración', 'Tiempo ejecutado']]);\n        XLSX.utils.book_append_sheet(workbook, worksheet, 'Páginas');\n      }\n\n      // Agregar las páginas al archivo Excel\n      const startRow = XLSX.utils.decode_range(worksheet['!ref']).e.r + 2;\n      paginas.forEach((pagina, index) => {\n        const row = startRow + index;\n        worksheet[`A${row}`] = {\n          v: pagina.pagina\n        };\n        worksheet[`B${row}`] = {\n          v: pagina.tipo\n        };\n        worksheet[`C${row}`] = {\n          v: pagina.tiempoInicio\n        };\n        worksheet[`D${row}`] = {\n          v: pagina.duracion\n        };\n        worksheet[`E${row}`] = {\n          v: pagina.tiempoEjecutado\n        };\n      });\n      XLSX.writeFile(workbook, filePath);\n    }\n  }\n  static async obtenerPaginas() {\n    if (typeof window !== 'undefined' && window.localStorage) {\n      // Entorno del navegador\n      const paginas = localStorage.getItem('paginas');\n      return paginas ? JSON.parse(paginas) : [];\n    } else {\n      // Entorno del servidor\n      const {\n        default: fs\n      } = await import('fs');\n      const {\n        default: path\n      } = await import('path');\n      const XLSX = await import('xlsx');\n      const filePath = path.join(__dirname, 'Excel', 'paginas_filas_programa_dcsha.xlsx');\n      if (fs.existsSync(filePath)) {\n        const workbook = XLSX.readFile(filePath);\n        const worksheet = workbook.Sheets[workbook.SheetNames[0]];\n        const range = XLSX.utils.decode_range(worksheet['!ref']);\n        const paginas = [];\n        for (let row = 2; row <= range.e.r; row++) {\n          const pagina = {\n            pagina: worksheet[`A${row}`] ? worksheet[`A${row}`].v : '',\n            tipo: worksheet[`B${row}`] ? worksheet[`B${row}`].v : '',\n            tiempoInicio: worksheet[`C${row}`] ? worksheet[`C${row}`].v : '',\n            duracion: worksheet[`D${row}`] ? worksheet[`D${row}`].v : '',\n            tiempoEjecutado: worksheet[`E${row}`] ? worksheet[`E${row}`].v : ''\n          };\n          paginas.push(pagina);\n        }\n        return paginas;\n      }\n      return [];\n    }\n  }\n}\nmodule.exports = SAL;","map":{"version":3,"names":["SAL","almacenarPaginas","paginas","window","localStorage","setItem","JSON","stringify","default","fs","path","XLSX","filePath","join","__dirname","workbook","worksheet","existsSync","readFile","Sheets","SheetNames","utils","book_new","aoa_to_sheet","book_append_sheet","startRow","decode_range","e","r","forEach","pagina","index","row","v","tipo","tiempoInicio","duracion","tiempoEjecutado","writeFile","obtenerPaginas","getItem","parse","range","push","module","exports"],"sources":["C:/xampp/htdocs/Aplicativo Escaleta-Teclado GC prototipo/Codificación/src/Persistencia/SistemaAlmacenamientoLocal/SAL.js"],"sourcesContent":["class SAL {\r\n  static async almacenarPaginas(paginas) {\r\n    if (typeof window !== 'undefined' && window.localStorage) {\r\n      // Entorno del navegador\r\n      localStorage.setItem('paginas', JSON.stringify(paginas));\r\n    } else {\r\n      // Entorno del servidor\r\n      const { default: fs } = await import('fs');\r\n      const { default: path } = await import('path');\r\n      const XLSX = await import('xlsx');\r\n      const filePath = path.join(__dirname, 'Excel', 'paginas_filas_programa_dcsha.xlsx');\r\n\r\n      let workbook;\r\n      let worksheet;\r\n\r\n      if (fs.existsSync(filePath)) {\r\n        workbook = XLSX.readFile(filePath);\r\n        worksheet = workbook.Sheets[workbook.SheetNames[0]];\r\n      } else {\r\n        workbook = XLSX.utils.book_new();\r\n        worksheet = XLSX.utils.aoa_to_sheet([['Página', 'Tipo', 'Tiempo de inicio', 'Duración', 'Tiempo ejecutado']]);\r\n        XLSX.utils.book_append_sheet(workbook, worksheet, 'Páginas');\r\n      }\r\n\r\n      // Agregar las páginas al archivo Excel\r\n      const startRow = XLSX.utils.decode_range(worksheet['!ref']).e.r + 2;\r\n      paginas.forEach((pagina, index) => {\r\n        const row = startRow + index;\r\n        worksheet[`A${row}`] = { v: pagina.pagina };\r\n        worksheet[`B${row}`] = { v: pagina.tipo };\r\n        worksheet[`C${row}`] = { v: pagina.tiempoInicio };\r\n        worksheet[`D${row}`] = { v: pagina.duracion };\r\n        worksheet[`E${row}`] = { v: pagina.tiempoEjecutado };\r\n      });\r\n\r\n      XLSX.writeFile(workbook, filePath);\r\n    }\r\n  }\r\n\r\n  static async obtenerPaginas() {\r\n    if (typeof window !== 'undefined' && window.localStorage) {\r\n      // Entorno del navegador\r\n      const paginas = localStorage.getItem('paginas');\r\n      return paginas ? JSON.parse(paginas) : [];\r\n    } else {\r\n      // Entorno del servidor\r\n      const { default: fs } = await import('fs');\r\n      const { default: path } = await import('path');\r\n      const XLSX = await import('xlsx');\r\n      const filePath = path.join(__dirname, 'Excel', 'paginas_filas_programa_dcsha.xlsx');\r\n\r\n      if (fs.existsSync(filePath)) {\r\n        const workbook = XLSX.readFile(filePath);\r\n        const worksheet = workbook.Sheets[workbook.SheetNames[0]];\r\n        const range = XLSX.utils.decode_range(worksheet['!ref']);\r\n        const paginas = [];\r\n\r\n        for (let row = 2; row <= range.e.r; row++) {\r\n          const pagina = {\r\n            pagina: worksheet[`A${row}`] ? worksheet[`A${row}`].v : '',\r\n            tipo: worksheet[`B${row}`] ? worksheet[`B${row}`].v : '',\r\n            tiempoInicio: worksheet[`C${row}`] ? worksheet[`C${row}`].v : '',\r\n            duracion: worksheet[`D${row}`] ? worksheet[`D${row}`].v : '',\r\n            tiempoEjecutado: worksheet[`E${row}`] ? worksheet[`E${row}`].v : '',\r\n          };\r\n          paginas.push(pagina);\r\n        }\r\n\r\n        return paginas;\r\n      }\r\n\r\n      return [];\r\n    }\r\n  }\r\n}\r\n\r\nmodule.exports = SAL;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}